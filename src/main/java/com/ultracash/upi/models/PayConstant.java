//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.03 at 06:38:41 PM GMT+05:30 
//


package com.ultracash.upi.models;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for payConstant.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="payConstant">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="PAY"/>
 *     &lt;enumeration value="COLLECT"/>
 *     &lt;enumeration value="REVERSAL"/>
 *     &lt;enumeration value="REFUND"/>
 *     &lt;enumeration value="CREDIT"/>
 *     &lt;enumeration value="DEBIT"/>
 *     &lt;enumeration value="BAL"/>
 *     &lt;enumeration value="ListPsp"/>
 *     &lt;enumeration value="ListAccPvd"/>
 *     &lt;enumeration value="ListKeys"/>
 *     &lt;enumeration value="GetToken"/>
 *     &lt;enumeration value="ListAccount"/>
 *     &lt;enumeration value="ListVae"/>
 *     &lt;enumeration value="ManageVae"/>
 *     &lt;enumeration value="ValAdd"/>
 *     &lt;enumeration value="SetCre"/>
 *     &lt;enumeration value="ReqRegMob"/>
 *     &lt;enumeration value="ChkTxn"/>
 *     &lt;enumeration value="Otp"/>
 *     &lt;enumeration value="BalEnq"/>
 *     &lt;enumeration value="Hbt"/>
 *     &lt;enumeration value="PendingMsg"/>
 *     &lt;enumeration value="TxnConfirmation"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "payConstant")
@XmlEnum
public enum PayConstant {

    PAY("PAY"),
    COLLECT("COLLECT"),
    REVERSAL("REVERSAL"),
    REFUND("REFUND"),
    CREDIT("CREDIT"),
    DEBIT("DEBIT"),
    BAL("BAL"),
    @XmlEnumValue("ListPsp")
    LIST_PSP("ListPsp"),
    @XmlEnumValue("ListAccPvd")
    LIST_ACC_PVD("ListAccPvd"),
    @XmlEnumValue("ListKeys")
    LIST_KEYS("ListKeys"),
    @XmlEnumValue("GetToken")
    GET_TOKEN("GetToken"),
    @XmlEnumValue("ListAccount")
    LIST_ACCOUNT("ListAccount"),
    @XmlEnumValue("ListVae")
    LIST_VAE("ListVae"),
    @XmlEnumValue("ManageVae")
    MANAGE_VAE("ManageVae"),
    @XmlEnumValue("ValAdd")
    VAL_ADD("ValAdd"),
    @XmlEnumValue("SetCre")
    SET_CRE("SetCre"),
    @XmlEnumValue("ReqRegMob")
    REQ_REG_MOB("ReqRegMob"),
    @XmlEnumValue("ChkTxn")
    CHK_TXN("ChkTxn"),
    @XmlEnumValue("Otp")
    OTP("Otp"),
    @XmlEnumValue("BalEnq")
    BAL_ENQ("BalEnq"),
    @XmlEnumValue("Hbt")
    HBT("Hbt"),
    @XmlEnumValue("PendingMsg")
    PENDING_MSG("PendingMsg"),
    @XmlEnumValue("TxnConfirmation")
    TXN_CONFIRMATION("TxnConfirmation");
    private final String value;

    PayConstant(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PayConstant fromValue(String v) {
        for (PayConstant c: PayConstant.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
